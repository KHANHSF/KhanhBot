name: Lichess Bot

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

env:
  LICHESS_TOKEN: ${{ secrets.LICHESS_TOKEN }}

jobs:
  deploy-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 350
    
    # Removed matrix strategy to run single instance
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install tenacity  # Adding missing dependency
        
    - name: Download latest Stockfish dev
      run: |
        mkdir -p engines
        sudo apt-get update && sudo apt-get install -y unzip
        curl -L -o stockfish.zip http://abrok.eu/stockfish/latest/linux/stockfish_x64_modern.zip
        unzip -o stockfish.zip -d engines/
        mv engines/stockfish_* engines/sf
        chmod +x engines/sf
        
    - name: Setup engines permissions
      run: |
        if [ -f "engines/fairy-stockfish-largeboard_x86-64-bmi2" ]; then
          chmod +x ./engines/fairy-stockfish-largeboard_x86-64-bmi2
        fi
        if [ -f "engines/ShashChess39" ]; then
          chmod +x engines/ShashChess39
        fi

    - name: Setup token
      run: |
        python3 << 'EOF'
        import yaml
        try:
            with open('config.yml', 'r') as f:
                config = yaml.safe_load(f) or {}
            config['token'] = "${{ secrets.LICHESS_TOKEN }}"
            with open('config.yml', 'w') as f:
                yaml.dump(config, f, default_flow_style=False)
            print("✅ Token configuration successful")
        except Exception as e:
            print(f"❌ Error: {e}")
            exit(1)
        EOF


    - name: Connect to VPN (EU)
      run: |
        sudo apt-get install -y openvpn
        sudo openvpn --config eu-server.ovpn &
        sleep 10

        
    - name: Launch bot
      run: |
        echo "🤖 Starting bot..."
        python3 user_interface.py -u "tournament zBNHRrlk" &
        PID=$!
          
        # Auto-exit after 350 minutes (so restart runs without overlap)
        ( sleep 20700 && echo "Time up. Killing bot..." && kill -SIGTERM $PID ) &
          
        wait $PID
        echo "Bot ended cleanly."

    - name: 🔁 Self-Restart (Fire-and-Forget)
      if: always()
      run: gh workflow run lichess-bot.yml
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
